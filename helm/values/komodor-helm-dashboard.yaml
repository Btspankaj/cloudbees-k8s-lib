replicaCount: 1

# Flag for setting environment to debug mode
debug: false

image:
  repository: komodorio/helm-dashboard
  pullPolicy: IfNotPresent

serviceAccount:
  # Specifies whether a service account should be created
  create: true

dashboard:
  allowWriteActions: true

  persistence:
    enabled: true

    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ${storageClass}

    ## Helm Dashboard Persistent Volume access modes
    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    accessModes:
      - ReadWriteOnce

    ## Helm Dashboard data Persistent Volume size
    ##
    size: 100M

## @param.updateStrategy.type Set up update strategy for helm-dashboard installation.
## Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to make sure the pods is destroyed first.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## Example:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false

extraArgs:
  - --no-browser
  - --bind=0.0.0.0
